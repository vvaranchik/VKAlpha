<metro:MetroWindow
        xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls" 
        x:Class="VKAlpha.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:draweritems="clr-namespace:VKAlpha.Controls"
        xmlns:local="clr-namespace:VKAlpha"
        xmlns:domain="clr-namespace:VKAlpha.Controls"
        xmlns:helpers="clr-namespace:VKAlpha.Helpers"
        mc:Ignorable="d"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        GlowBrush="{StaticResource VKColor}"
        BorderThickness="1"
        DataContext="{Binding MainViewModel, Source={StaticResource MainLocator}}"
        Title="VK Alpha" MinHeight="600" MinWidth="915" Initialized="MetroWindow_Initialized" WindowTitleBrush="RoyalBlue" Name="MainWnd">
    <Window.Resources>
        <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MaterialDesignActionDarkToggleButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource VKColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Slider}" BasedOn="{StaticResource MaterialDesignSlider}"/>
    </Window.Resources>
    <md:DialogHost Name="RootDialog" 
                   Identifier="RootDialog" 
                   SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">
        <Grid x:Name="GridMain" 
              Background="{Binding Theme.MainBackground, Source={StaticResource MainLocator}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <DockPanel Grid.Row="1">
                <md:ColorZone Visibility="{Binding SidebarVisible, Converter={StaticResource NullToVisibilityConventer}}" 
                              DockPanel.Dock="Bottom" 
                              Padding="16" 
                              md:ShadowAssist.ShadowDepth="Depth2"
                              Mode="Standard" 
                              Background="{Binding Theme.BelowMain, Source={StaticResource MainLocator}}" 
                              Foreground="White">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" MaxWidth="650"/>
                            <ColumnDefinition MinWidth="400"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0" VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="64"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <Image Margin="0 0 0 0" 
                                   Grid.Column="0" 
                                   Width="64" 
                                   Height="64"
                                   Source="{Binding CurrentTrack.Cover}" 
                                   Visibility="Visible"/>
                            <md:PackIcon 
                                Kind="Alpha" 
                                Width="64" 
                                Height="64" 
                                VerticalAlignment="Center" 
                                Grid.Column="0" 
                                Visibility="{Binding CurrentTrack.Cover, Converter={StaticResource NullToVisibilityConventer}, ConverterParameter=True}"/>
                            <TextBlock 
                                PreviewMouseUp="TextBlock_PreviewMouseUp" 
                                Foreground="{Binding Theme.PlayerForegroundBottom, Source={StaticResource MainLocator}}" 
                                Text="{Binding CurrentTrack.Title}" 
                                ToolTip="{Binding CurrentTrack.Title}" 
                                TextTrimming="CharacterEllipsis" 
                                FontSize="16" 
                                Grid.Column="1" 
                                Margin="10,10,0,0"/>
                            <TextBlock 
                                Foreground="{Binding Theme.PlayerForegroundBottom, Source={StaticResource MainLocator}}" 
                                Text="{Binding CurrentTrack.Artist}" 
                                ToolTip="{Binding CurrentTrack.Artist}" 
                                TextTrimming="CharacterEllipsis" 
                                FontSize="16" 
                                Grid.Column="1" 
                                Margin="10,38,0,0"/>
                        </Grid>
                        <StackPanel Orientation="Vertical" Grid.Column="1" VerticalAlignment="Center" Margin="42,0,0,0" >
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <ToggleButton Margin="0 0 15 0" Width="32" Height="32" IsChecked="{Binding IsShuffled}">
                                    <md:PackIcon Kind="ShuffleVariant" Width="32" Height="32" ToolTip="{Binding AppLang.ShuffleOff, Source={StaticResource MainLocator}}">
                                        <md:PackIcon.Style>
                                            <Style TargetType="{x:Type md:PackIcon}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}, Path=IsChecked}" Value="True">
                                                        <Setter Property="Foreground" Value="{Binding Theme.checkBoxChecked, Source={StaticResource MainLocator}}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}, Path=IsChecked}" Value="False">
                                                        <Setter Property="Foreground" Value="{Binding Theme.checkBoxUnchecked, Source={StaticResource MainLocator}}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}, Path=IsMouseOver}" Value="True">
                                                        <Setter Property="Foreground" Value="{Binding Theme.btnHovered, Source={StaticResource MainLocator}}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </md:PackIcon.Style>
                                    </md:PackIcon>
                                    <md:ToggleButtonAssist.OnContent>
                                        <md:PackIcon Kind="ShuffleVariant" Width="32" Height="32" ToolTip="{Binding AppLang.ShuffleOn, Source={StaticResource MainLocator}}">
                                            <md:PackIcon.Style>
                                                <Style TargetType="{x:Type md:PackIcon}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}, Path=IsChecked}" Value="True">
                                                            <Setter Property="Foreground" Value="{Binding Theme.checkBoxChecked, Source={StaticResource MainLocator}}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}, Path=IsChecked}" Value="False">
                                                            <Setter Property="Foreground" Value="{Binding Theme.checkBoxUnchecked, Source={StaticResource MainLocator}}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}, Path=IsMouseOver}" Value="True">
                                                            <Setter Property="Foreground" Value="{Binding Theme.btnHovered, Source={StaticResource MainLocator}}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </md:PackIcon.Style>
                                        </md:PackIcon>
                                    </md:ToggleButtonAssist.OnContent>
                                </ToggleButton>
                                <Button Style="{DynamicResource SimpleButtonV2}" Background="Transparent" Command="{Binding SkipPrev}" ToolTip="{Binding AppLang.Prev, Source={StaticResource MainLocator}}">
                                    <md:PackIcon Kind="SkipPrevious" Width="32" Height="28"/>
                                </Button>
                                <ToggleButton Margin="15 0 15 0" Width="32" Height="32" IsChecked="{Binding IsPlaying}" Command="{Binding PlayCommand}">
                                    <md:PackIcon Kind="PlayCircleOutline" Width="32" Height="32" ToolTip="{Binding AppLang.Play, Source={StaticResource MainLocator}}"/>
                                    <md:ToggleButtonAssist.OnContent>
                                        <md:PackIcon Kind="PauseCircleOutline" Width="32" Height="32" ToolTip="{Binding AppLang.Pause, Source={StaticResource MainLocator}}"/>
                                    </md:ToggleButtonAssist.OnContent>
                                </ToggleButton>
                                <Button Style="{DynamicResource SimpleButtonV2}" Background="Transparent"  Command="{Binding SkipNext}" ToolTip="{Binding AppLang.Next, Source={StaticResource MainLocator}}">
                                    <md:PackIcon Kind="SkipNext" Width="32" Height="28"/>
                                </Button>
                                <ToggleButton Margin="15 0 15 0" Width="32" Height="32" IsChecked="{Binding BassPlayer.IsRepeated, Source={StaticResource MainLocator}}">
                                    <md:PackIcon Kind="Loop" Width="32" Height="32" ToolTip="{Binding AppLang.RepeatOn, Source={StaticResource MainLocator}}">
                                        <md:PackIcon.Style>
                                            <Style TargetType="{x:Type md:PackIcon}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}, Path=IsChecked}" Value="True">
                                                        <Setter Property="Foreground" Value="{Binding Theme.checkBoxChecked, Source={StaticResource MainLocator}}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}, Path=IsChecked}" Value="False">
                                                        <Setter Property="Foreground" Value="{Binding Theme.checkBoxUnchecked, Source={StaticResource MainLocator}}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}, Path=IsMouseOver}" Value="True">
                                                        <Setter Property="Foreground" Value="{Binding Theme.btnHovered, Source={StaticResource MainLocator}}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </md:PackIcon.Style>
                                    </md:PackIcon>
                                    <md:ToggleButtonAssist.OnContent>
                                        <md:PackIcon Kind="Loop" Width="32" Height="32" ToolTip="{Binding AppLang.RepeatOff, Source={StaticResource MainLocator}}">
                                            <md:PackIcon.Style>
                                                <Style TargetType="{x:Type md:PackIcon}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}, Path=IsChecked}" Value="True">
                                                            <Setter Property="Foreground" Value="{Binding Theme.checkBoxChecked, Source={StaticResource MainLocator}}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}, Path=IsChecked}" Value="False">
                                                            <Setter Property="Foreground" Value="{Binding Theme.checkBoxUnchecked, Source={StaticResource MainLocator}}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}, Path=IsMouseOver}" Value="True">
                                                            <Setter Property="Foreground" Value="{Binding Theme.btnHovered, Source={StaticResource MainLocator}}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </md:PackIcon.Style>
                                        </md:PackIcon>
                                    </md:ToggleButtonAssist.OnContent>
                                </ToggleButton>
                            </StackPanel>
                            <Grid MaxWidth="768">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="42"/>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="42"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Foreground="{Binding Theme.PlayerForegroundBottom, Source={StaticResource MainLocator}}" Text="{Binding BassPlayer.SliderValue, Source={StaticResource MainLocator}, Converter={StaticResource DoubleToTimeSpanStringConventer}}" Grid.Column="0" VerticalAlignment="Center" Margin="0 8 0 0" HorizontalAlignment="Left"/>
                                <TextBlock Foreground="{Binding Theme.PlayerForegroundBottom, Source={StaticResource MainLocator}}" Text="{Binding CurrentTrack.Duration, Converter={StaticResource AudioTimeSpanConverter}}" Grid.Column="2" VerticalAlignment="Center" Margin="0 8 0 0" HorizontalAlignment="Right"/>
                                <Slider IsMoveToPointEnabled="True" Margin="10,8,10,2" Foreground="White"  Minimum="0"  VerticalAlignment="Center"
                                        Value="{Binding BassPlayer.SliderValue, Source={StaticResource MainLocator}, Mode=TwoWay}" 
                                        Maximum="{Binding CurrentTrack.Duration.TotalSeconds}" Grid.Column="1"/>
                            </Grid>
                        </StackPanel>
                        <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right" Width="172" >
                            <ToggleButton Width="32" Height="32" IsChecked="{Binding BassPlayer.IsMuted, Source={StaticResource MainLocator}, Mode=TwoWay}" Margin="10 0 10 0">
                                <md:PackIcon Kind="VolumeHigh" Height="28" Width="28" ToolTip="{Binding AppLang.Mute, Source={StaticResource MainLocator}}"/>
                                <md:ToggleButtonAssist.OnContent>
                                    <md:PackIcon Kind="VolumeMute" Height="28" Width="28" ToolTip="{Binding AppLang.MaxVol, Source={StaticResource MainLocator}}"/>
                                </md:ToggleButtonAssist.OnContent>
                            </ToggleButton>
                            <Slider Foreground="White" Minimum="0" Maximum="1" TickFrequency="0.02" SmallChange="0.1" LargeChange="0.2" IsSnapToTickEnabled="True" Value="{Binding BassPlayer.Volume, Source={StaticResource MainLocator}, Mode=TwoWay}" VerticalAlignment="Center" Width="110" />
                        </StackPanel>
                    </Grid>
                </md:ColorZone>
            </DockPanel>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0" Visibility="{Binding SidebarVisible, Converter={StaticResource NullToVisibilityConventer}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="187" MaxWidth="225"/>
                        <ColumnDefinition Width="4"/>
                    </Grid.ColumnDefinitions>
                    <TreeView Style="{DynamicResource CommonListBoxStyle2}" 
                              Grid.Column="0"
                              HorizontalAlignment="Center" VerticalAlignment="Top"
                              Margin="0 5 0 0"
                              ItemContainerStyle="{DynamicResource SideBarContainerStyle}"
                              ItemsSource="{Binding SideBarItems}" 
                              ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                              Background="{Binding Theme.MainBackground, Source={StaticResource MainLocator}}">
                        <TreeView.Resources>
                            <HierarchicalDataTemplate DataType="{x:Type domain:DrawerCategory}" ItemsSource="{Binding TreeContent}">
                                <Button Style="{DynamicResource SimpleButtonStyle}" Command="{Binding Action}">
                                    <Grid Background="Transparent">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <md:PackIcon Grid.Column="0" Kind="{Binding Icon}" Margin="8 0 4 0" Width="24" Height="24" Foreground="{Binding Theme.ForegroundMenu, Source={StaticResource MainLocator}}"/>
                                        <TextBlock Grid.Column="1" Text="{Binding Name}" FontSize="18" Foreground="{Binding Theme.ForegroundMenu, Source={StaticResource MainLocator}}"/>
                                    </Grid>
                                </Button>
                            </HierarchicalDataTemplate>
                            <DataTemplate DataType="{x:Type domain:DrawerItem}">
                                <Button Style="{DynamicResource SimpleButtonStyle}" Command="{Binding Action}" Margin="2 2">
                                    <TextBlock MaxWidth="170" Text="{Binding Name}" FontSize="14" Foreground="{Binding Theme.ForegroundMenu, Source={StaticResource MainLocator}}" TextTrimming="CharacterEllipsis"/>
                                </Button>
                            </DataTemplate>
                        </TreeView.Resources>
                    </TreeView>
                    <GridSplitter Grid.Column="1" ResizeDirection="Columns" HorizontalAlignment="Stretch" Background="{StaticResource VKColor}"/>
                </Grid>
                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <md:ColorZone Grid.Row="0" Background="{Binding Theme.AboveMain, Source={StaticResource MainLocator}}" Mode="Standard" Padding="16" Visibility="{Binding SidebarVisible, Converter={StaticResource NullToVisibilityConventer}}">
                        <Grid>
                            <StackPanel Orientation="Horizontal" md:RippleAssist.IsCentered="True">
                                <Button Style="{DynamicResource SimpleButtonV2}"
                                        ToolTip="Backward" 
                                        Command="{Binding GoBackward}">
                                    <md:PackIcon Kind="LessThan" Height="25"/>
                                </Button>
                                <Button Style="{DynamicResource SimpleButtonV2}"
                                        Margin="5 0 0 0" 
                                        ToolTip="Forward" 
                                        Command="{Binding GoForward}">
                                    <md:PackIcon Kind="GreaterThan" Height="25"/>
                                </Button>
                                <md:ColorZone Mode="Standard" Padding="4 0 0 0" Background="{Binding Theme.TextBoxBackground, Source={StaticResource MainLocator}}" CornerRadius="15" Panel.ZIndex="1" Margin="16 0 0 0" md:ShadowAssist.ShadowDepth="Depth1" Height="32" >
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <!--Toolitp="{Binding AppLang.Search,Source={StaticResource MainLocator}}"-->
                                        <Button Style="{DynamicResource SimpleButtonV2}"
                                                Command="{Binding DoSearch}" 
                                                CommandParameter="{Binding SearchQuery}">
                                            <md:PackIcon Kind="Magnify" Opacity=".86" Foreground="{Binding Theme.ForegroundElements, Source={StaticResource MainLocator}}"/>
                                        </Button>
                                        <TextBox Text="{Binding SearchQuery, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}" md:HintAssist.Foreground="{Binding Theme.HintForeground, Source={StaticResource MainLocator}}"  Foreground="{Binding Theme.TextBoxForeground, Source={StaticResource MainLocator}}"
                                                 Grid.Column="1" Margin="8 0 0 0" md:HintAssist.Hint="Search query" BorderThickness="0" MinWidth="200" VerticalAlignment="Center"
                                                 md:TextFieldAssist.DecorationVisibility="Hidden" />
                                    </Grid>
                                </md:ColorZone>
                            </StackPanel>
                            <Button x:Name="UploadAudio"
                                    Style="{DynamicResource SimpleButtonV2}"
                                    Command="{Binding Upload}" 
                                    ToolTip="{Binding AppLang.UploadAudio, Source={StaticResource MainLocator}}"
                                    HorizontalAlignment="Right" Width="32" Height="28">
                                <md:PackIcon Kind="Upload" Width="20" Height="28"/>
                            </Button>
                        </Grid>
                    </md:ColorZone>
                    <Frame x:Name="FrameMain" NavigationUIVisibility="Hidden" Grid.Row="1" Content="{Binding FrameMainFE, Mode=TwoWay}"/>
                </Grid>
            </Grid>
            <md:Snackbar MessageQueue="{Binding MessageQueue}" x:Name="MainSnackbar" Grid.Row="0" />
        </Grid>
    </md:DialogHost>
</metro:MetroWindow>
