<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:local="clr-namespace:VKAlpha.Controls">

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CommonListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="AlternationCount" Value="2" />
        <Setter Property="Padding" Value="5,10,15,0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="False">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--
    <Style x:Key="AudioListStyle" TargetType="{x:Type ListBox}" BasedOn="{StaticResource CommonListBoxStyle}">
        <Setter Property="SelectedItem" Value="{Binding DataContext.CurrentPlayingItem, ElementName=AudiosListV, Mode=OneWay}"/>
    </Style>
    -->
    <Style x:Key="AudioListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="IsSelected" Value="{Binding Path=IsPlaying, Mode=OneWay}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{Binding Theme.listboxItemHovered, Source={StaticResource MainLocator}}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{Binding Theme.listboxItemHovered, Source={StaticResource MainLocator}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Background" Value="{DynamicResource AudioAlternationBackgroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="FriendListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="False"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="Margin" Value="0,0,5,5" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" Opacity="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="-1"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource AccentBrush}"/>
                            <Setter Property="Background" TargetName="Bd" Value="{Binding Theme.listboxItemHovered, Source={StaticResource MainLocator}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SideBarItemContainerStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="7,7,7,7"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CommonListBoxStyle2" TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="AlternationCount" Value="2" />
        <Setter Property="Padding" Value="15,10,15,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="False">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SideBarContainerStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="7,7,7,7"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{Binding Theme.ForegroundMenu, Source={StaticResource MainLocator}}"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <StackPanel>
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="19" />
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <ToggleButton Grid.Column="0" x:Name="Expander" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press">
                                    <md:PackIcon Kind="MenuUp" Foreground="{Binding Theme.ForegroundMenu,Source={StaticResource MainLocator}}"/>
                                    <md:ToggleButtonAssist.OnContent>
                                        <md:PackIcon Kind="MenuDown" Foreground="{Binding Theme.ForegroundMenu,Source={StaticResource MainLocator}}"/>
                                    </md:ToggleButtonAssist.OnContent>
                                </ToggleButton>
                                <ContentPresenter x:Name="PART_Header" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" ContentSource="Header" />
                            </Grid>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Width" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Height" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="true">
                            <!--<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>-->
                            <Setter TargetName="Bd" Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <!--<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>-->
                            <Setter TargetName="Bd" Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="SidebarItemTemplate">
        <Button Style="{DynamicResource SimpleButtonStyle}" Command="{Binding Action}">
            <Grid Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <md:PackIcon Grid.Column="0" Kind="{Binding Icon}" Margin="8 0 4 0" Width="24" Height="24" Foreground="{Binding Theme.ForegroundMenu, Source={StaticResource MainLocator}}"/>
                <TextBlock Grid.Column="1" Text="{Binding Name}" FontSize="18" Foreground="{Binding Theme.ForegroundMenu, Source={StaticResource MainLocator}}"/>
                <TreeView>
                    <TreeView.Resources>
                        <HierarchicalDataTemplate DataType="{x:Type local:DrawerCategory}" ItemsSource="{Binding TreeContent}">
                            <TextBlock Text="{Binding Name}" Margin="3 2" />
                        </HierarchicalDataTemplate>
                        <DataTemplate DataType="{x:Type local:DrawerItem}">
                            <TextBlock Text="{Binding Name}" Margin="3 2" ToolTip="{Binding Director}" />
                        </DataTemplate>
                    </TreeView.Resources>
                </TreeView>
            </Grid>
        </Button>
    </DataTemplate>
    <DataTemplate x:Key="LocalAudioItemTemplate">
        <Grid Background="Transparent" MaxHeight="32" Margin="0 5 0 5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" MaxWidth="650"/>
                <ColumnDefinition MinWidth="400"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Vertical" Grid.Column="0" Margin="15 0 -10 0" VerticalAlignment="Center" >
                <TextBlock Foreground="{Binding Theme.ForegroundMenu, Source={StaticResource MainLocator}}" x:Name="Title" Text="{Binding Title}" Margin="0 0 5 0" TextTrimming="CharacterEllipsis" FontSize="13" ToolTip="{Binding Title}"/>
            </StackPanel>
            <StackPanel Orientation="Vertical" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center">
                <Button Style="{StaticResource SimpleButtonStyle}" Grid.Column="2" HorizontalAlignment="Left" Opacity="0.6" Margin="50,0,0,0" CommandParameter="{Binding Artist}" Command="{Binding MainViewModel.SearchByArtist, Source={StaticResource MainLocator}}">
                    <TextBlock x:Name="Artist" Text="{Binding Artist}" Foreground="{Binding Theme.ForegroundMenu, Source={StaticResource MainLocator}}" FontSize="13" TextTrimming="CharacterEllipsis" ToolTip="{Binding Artist}"/>
                </Button>
            </StackPanel>
            <StackPanel HorizontalAlignment="Right" Grid.Column="2" Orientation="Horizontal" Margin="15 0 5 0">
                <TextBlock Foreground="{Binding Theme.ForegroundMenu, Source={StaticResource MainLocator}}" x:Name="Duration" Text="{Binding Duration, Converter={StaticResource AudioTimeSpanConverter}}" 
                               HorizontalAlignment="Right" Opacity="0.6" FontSize="12" VerticalAlignment="Center" Margin="0,0,24,0" TextTrimming="CharacterEllipsis"/>
            </StackPanel>
            <StackPanel x:Name="ToolbarPanel" Grid.Column="2" HorizontalAlignment="Right" Margin="0,-2,24,-2" Opacity="0" Orientation="Horizontal" VerticalAlignment="Center">
                <Button Style="{StaticResource ToolbarButtonStyle}" Width="24" Height="24" Visibility="{Binding OwnerId, Converter={StaticResource LongToVisibilityConventer}, ConverterParameter=True}"
                            ToolTip="{Binding AppLang.AddSong, Source={StaticResource MainLocator}}" Command="{Binding MainViewModel.AddSong, Source={StaticResource MainLocator}}" CommandParameter="{Binding}">
                    <md:PackIcon Kind="Plus" Height="22" Width="22" Background="Transparent"/>
                </Button>
                <Button Style="{StaticResource ToolbarButtonStyle}" Width="24" Height="24" Visibility="{Binding OwnerId, Converter={StaticResource LongToVisibilityConventer}}"
                            ToolTip="{Binding AppLang.DelSong, Source={StaticResource MainLocator}}" Command="{Binding MainViewModel.RmSong, Source={StaticResource MainLocator}}" CommandParameter="{Binding FullData}">
                    <md:PackIcon Kind="Minus" Height="22" Width="22" Background="Transparent"/>
                </Button>
                <Button Style="{StaticResource ToolbarButtonStyle}" Width="24" Height="24" Command="{Binding MainViewModel.DownloadSong, Source={StaticResource MainLocator}}" CommandParameter="{Binding}">
                    <md:PackIcon Kind="Download" Height="22" Width="22" Background="Transparent"/>
                </Button>
                <Button Style="{StaticResource ToolbarButtonStyle}" Width="24" Height="24" Visibility="{Binding OwnerId, Converter={StaticResource LongToVisibilityConventer}}" 
                            Command="{Binding MainViewModel.EditSong, Source={StaticResource MainLocator}}" CommandParameter="{Binding}" ToolTip="{Binding AppLang.EditSong, Source={StaticResource MainLocator}}">
                    <md:PackIcon Kind="Edit" Height="22" Width="22" Background="Transparent"/>
                </Button>
                <Button Style="{StaticResource ToolbarButtonStyle}" Width="24" Height="24" Visibility="{Binding LyricsId, Converter={StaticResource NullToVisibilityConventer}}"
                            ToolTip="{Binding AppLang.Lyrics, Source={StaticResource MainLocator}}" Command="{Binding MainViewModel.ShowLyrics, Source={StaticResource MainLocator}}" CommandParameter="{Binding}">
                    <md:PackIcon Kind="NoteText" Height="22" Width="22" Background="Transparent"/>
                </Button>
            </StackPanel>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsMouseOver}" Value="True">
                <Setter TargetName="Duration" Property="Opacity" Value="0" />
                <Setter TargetName="ToolbarPanel" Property="Opacity" Value="1" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName='Artist', Path=IsMouseOver}" Value="True">
                <Setter TargetName="Artist" Property="Cursor" Value="Hand" />
                <Setter TargetName="Artist" Property="TextDecorations" Value="Underline" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate x:Key="FriendItemTemplate">
        <Button Style="{StaticResource SimpleButtonStyle}" Command="{Binding DataContext.GetFriendAudios, ElementName=FriendListV}" CommandParameter="{Binding Id}"
                                 Width="120" Height="120" ToolTip="{Binding Name}" Tag="{Binding DataContext, ElementName=FriendListV}" Name="UhBlyat">
            <Button.RenderTransform>
                <TranslateTransform />
            </Button.RenderTransform>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid Grid.RowSpan="2">
                    <Image Source="{Binding PhotoMedium}" Stretch="UniformToFill" RenderOptions.BitmapScalingMode="HighQuality"/>
                </Grid>
                <Rectangle Grid.Row="1" Fill="Black" Opacity="0.8" />
                <StackPanel Grid.Row="1">
                    <TextBlock Foreground="White" Text="{Binding FirstName}" FontWeight="Normal" FontSize="11" Margin="5,3,5,0" TextTrimming="CharacterEllipsis" Opacity="0.8" />
                    <TextBlock Foreground="White" Text="{Binding LastName}" FontFamily="Segoe UI SemiLight" FontSize="12" Margin="5,-2,5,7" TextTrimming="CharacterEllipsis" />
                </StackPanel>
            </Grid>
            <Button.ContextMenu>
                <ContextMenu Focusable="False">
                    <MenuItem Command="{Binding PlacementTarget.Tag.GetFriendsOf, RelativeSource={RelativeSource AncestorType=ContextMenu}}" 
                              CommandParameter="{Binding Id}">
                        <MenuItem.Header>
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0}">
                                        <Binding Path="PhotoMax"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </MenuItem.Header>
                    </MenuItem>
                </ContextMenu>
            </Button.ContextMenu>
        </Button>
    </DataTemplate>
    <DataTemplate x:Key="PlaylistItemTemplate">
        <Button Style="{StaticResource SimpleButtonStyle}" Command="{Binding DataContext.LoadPlaylist, ElementName=PlaylistsViewV}" CommandParameter="{Binding Id}"
                                 Width="120" Height="120" ToolTip="{Binding Title}" Tag="{Binding DataContext, ElementName=PlaylistsViewV}">
            <Button.RenderTransform>
                <TranslateTransform />
            </Button.RenderTransform>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid Grid.RowSpan="2">
                    <Image Source="{Binding Photo}" Stretch="UniformToFill" RenderOptions.BitmapScalingMode="HighQuality"/>
                </Grid>
                <Rectangle Grid.Row="1" Fill="Black" Opacity="0.8" />
                <StackPanel Grid.Row="1">
                    <TextBlock Foreground="White" Text="{Binding Title}" FontWeight="Normal" FontSize="11" Margin="5,3,5,0" TextTrimming="CharacterEllipsis"/>
                </StackPanel>
            </Grid>
        </Button>
    </DataTemplate>
</ResourceDictionary>
